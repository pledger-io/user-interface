$valid-color: #28a745;
$invalid-color: #dc3545;

.form, .Form {

  .valid, .invalid {
    input, textarea, select {
      background-repeat: no-repeat;
      background-position: center right calc(.375em + .1875rem);
      background-size: calc(.75em + .375rem) calc(.75em + .375rem);
    }
  }

  .valid {
    input, textarea, select {
      border-color: $valid-color;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
    }

    .Appender {
      & > .Prepend {
        border-color: $valid-color !important;
      }
    }
  }

  .invalid {
    label {
      color: $invalid-color;
    }

    .validation {
      display: block;
      margin-top: .25rem;
      color: $invalid-color;
    }

    input, textarea, select {
      border-color: $invalid-color;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23dc3545' viewBox='-2 -2 7 7'%3e%3cpath stroke='%23dc3545' d='M0 0l3 3m0-3L0 3'/%3e%3ccircle r='.5'/%3e%3ccircle cx='3' r='.5'/%3e%3ccircle cy='3' r='.5'/%3e%3ccircle cx='3' cy='3' r='.5'/%3e%3c/svg%3E");
    }

    .Appender {
      & > .Prepend {
        border-color: $invalid-color !important;
      }
    }
  }

  input, textarea, select, .TagInput {
    background-color: #fff;
    background-clip: padding-box;

    border: solid #ced4da 1px;
    border-radius: .25rem;

    padding: .25rem 2rem .25rem .5rem;

    line-height: 1.2rem;

    &:focus {
      outline: none;
      border-color: #86b7fe;
      box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, .25);
    }

    &[readOnly] {
      background-color: rgba(213, 212, 212, 0.25);

      &:focus {
        border-color: #ced4da;
        box-shadow: none;
      }
    }
  }

  textarea {
    min-height: 6rem;
  }

  fieldset {
    border: none;
    margin-bottom: 1.5rem;

    legend {
      font-size: 1.1em;
      font-weight: bold;
      color: var(--app-text-muted-color)
    }
  }

  .Input {

    &.Required {
      label {
        font-weight: bold;
      }
    }

    label {
      display: inline-flex;
      align-items: center;

      & > * {
        flex: 1;

        &.HelpText {
          font-weight: normal;
          text-align: end;
          padding-right: .25rem
        }
      }
    }

    .Appender {
      display: flex;
      align-items: stretch;

      & > * {
        flex: 1;
      }

      & > .Prepend {
        padding: .25rem .5rem;
        max-width: 2em;

        text-align: center;

        background: var(--card-header-background);

        border: 1px solid var(--app-border-color);
        border-right: none;

        & + input {
          border-left: none;
          border-top-left-radius: 0;
          border-bottom-left-radius: 0;
        }
      }
    }
  }

  .Switch {
    input {
      display: none;

      &:checked + label {
        &:before {
          background-color: #89c12d;
        }

        &:after {
          left: calc(100% - 1.15rem);
        }
      }
    }

    label {
      display: block;
      width: 2rem;
      height: 1.15rem;
      clip: rect(0 0 0 0);
      user-select: none;
      position: relative;

      // Switch Knob
      &:before, &:after {
        content: '';
        display: block;
        cursor: pointer;
      }

      &:before {
        width: 100%;
        height: 100%;
        background-color: #dedede;
        border-radius: 9999em;
        transition: background-color 0.25s ease;
      }

      &:after {
        position: absolute;
        top: 0;
        left: 0;
        width: 1.15rem;
        height: 1.15rem;
        border-radius: 50%;
        background-color: #fff;
        box-shadow: 0 0 2px rgba(0, 0, 0, 0.45);
        transition: left .25s ease;
      }
    }
  }

  &.group .Input {
    display: flex;
    margin-bottom: .5rem;

    label {
      flex: 1;
      max-width: 15vw;
      max-height: 1.8rem;
    }

    label + * {
      flex: 3;
    }

    & > div {
      display: flex;
      flex-direction: column;

      & > & {
        flex: 1;
      }
    }
  }

  .UploadAttachment {
    display: flex;
    flex-direction: column;

    & > * {
      flex: 1
    }

    input {
      display: none;
    }
  }

  .react-datepicker__triangle {
    display: none;
  }

  .Validation-Rules {
    padding: 1rem .5rem;
    margin: 1.5rem 1rem;

    border: 1px solid var(--app-border-color);
    border-radius: var(--border-radius);
    box-shadow: 0 0.2rem 0.3rem #0000002d;
  }

  .RadioButton {
    display: flex;
    align-items: center;
    margin-bottom: .55rem;

    label {
      flex: 1;
      text-align: center;
      padding: .35rem .5rem;
      border: 1px solid;

      cursor: pointer;

      input {
        visibility: hidden;
        width: 0;
        height: 0;
      }

      &.primary {
        color: #fff;
        border-color: var(--dark-primary-color);
        background-color: var(--dark-primary-color);

        &.selected {
          background-color: #fff;
          color: #000;
        }
      }

      &.warning {
        color: #fff;
        background-color: var(--dark-warning-color);
        border-color: var(--dark-warning-color);

        &.selected {
          background-color: #fff;
          color: #000;
        }
      }

      &.success {
        color: #fff;
        background-color: var(--dark-success-color);
        border-color: var(--dark-success-color);

        &.selected {
          background-color: #fff;
          color: #000;
        }
      }
    }
  }

  .AccountInput, .CategoryInput, .BudgetInput, .ContractInput, .TagInput {
    position: relative;
    display: flex;

    input {
      flex: 1;
    }

    .AutoComplete {
      position: absolute;
      z-index: 2;

      top: 2em;
      min-width: 100%;

      border: var(--app-border-color) 1px solid;
      border-radius: var(--border-radius-sm);
      background: var(--app-background);

      .Result {
        padding: .35rem;

        &:hover, &.selected {
          background-color: var(--selectable-hover-color);
        }

        .Summary {
          font-size: .8em;
          color: var(--app-text-muted-color)
        }
      }
    }
  }

  .TagInput {
    display: flex;

    .Tag {
      flex: 1;
      display: inline-flex;
      align-items: center;

      margin-right: .25rem;
      padding: .15rem .2rem .15rem .5rem;
      border-radius: var(--border-radius-sm);

      background: var(--info-color);
      color: white;
      font-size: .8rem;

      max-width: fit-content;

      svg {
        margin-left: .4rem;
        cursor: pointer;
      }
    }

    .EditableTag {
      flex: 1;
      cursor: text;
      display: inline-flex;
      position: relative;

      & > .Input {
        width: 100%;
        outline: none;
        align-items: center;

        margin-bottom: 0;
      }

      .AutoComplete {
        min-width: unset;

        .Result + .Result.Add {
          border-top: 1px solid var(--app-border-color);
        }

        .Result.Add {
          display: flex;
          align-items: center;

          padding: .15rem .5rem .15rem .35rem;

          background-color: rgba(0, 0, 0, 0.005);

          font-size: .85em;
          color: var(--app-text-muted-color);
        }
      }
    }
  }
}

